/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export interface InstantiateMsg {
  eclip: string;
  eclip_daily_reward: Uint128;
  eclipastro: string;
  flexible_staking: string;
  locking_reward_config: LockingRewardConfig[];
  owner: string;
  timelock_staking: string;
  token_converter: string;
}
export interface LockingRewardConfig {
  duration: number;
  multiplier: number;
}
export type ExecuteMsg = {
  update_owner: {
    owner: string;
  };
} | {
  update_config: {
    config: UpdateConfigMsg;
  };
} | {
  flexible_stake: {
    amount: Uint128;
    user: string;
  };
} | {
  timelock_stake: {
    amount: Uint128;
    duration: number;
    user: string;
  };
} | {
  flexible_stake_claim: {
    user: string;
  };
} | {
  timelock_stake_claim: {
    duration: number;
    locked_at: number;
    user: string;
  };
} | {
  timelock_stake_claim_all: {
    user: string;
  };
} | {
  flexible_unstake: {
    amount: Uint128;
    user: string;
  };
} | {
  timelock_unstake: {
    duration: number;
    locked_at: number;
    user: string;
  };
} | {
  restake: {
    from: number;
    locked_at: number;
    to: number;
    user: string;
  };
};
export interface UpdateConfigMsg {
  eclip?: string | null;
  eclip_daily_reward?: Uint128 | null;
  eclipastro?: string | null;
  flexible_staking?: string | null;
  locking_reward_config?: LockingRewardConfig[] | null;
  timelock_staking?: string | null;
  token_converter?: string | null;
}
export type QueryMsg = {
  config: {};
} | {
  owner: {};
} | {
  reward: {
    user: string;
  };
} | {
  total_staking: {};
} | {
  pending_rewards: {};
};
export type Addr = string;
export interface Config {
  eclip: string;
  eclip_daily_reward: Uint128;
  eclipastro: Addr;
  flexible_staking: Addr;
  locking_reward_config: LockingRewardConfig[];
  timelock_staking: Addr;
  token_converter: Addr;
}
export type ArrayOfTupleOfUint64AndUint128 = [number, Uint128][];
export interface UserRewardResponse {
  flexible: FlexibleReward;
  timelock: TimelockReward[];
}
export interface FlexibleReward {
  eclip: Uint128;
  eclipastro: Uint128;
}
export interface TimelockReward {
  duration: number;
  eclip: Uint128;
  eclipastro: Uint128;
  locked_at: number;
}
export type Decimal256 = string;
export interface TotalStakingData {
  reward_weight_eclip: Decimal256;
  reward_weight_eclipastro: Decimal256;
  staking_data: StakingData[];
}
export interface StakingData {
  amount: Uint128;
  duration: number;
}