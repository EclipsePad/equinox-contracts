/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { Addr, InstantiateMsg, ExecuteMsg, QueryMsg, MigrateMsg, LastClaimedResponse } from "./Faucet.types";
export interface FaucetReadOnlyInterface {
  contractAddress: string;
  lastClaimed: ({
    addr
  }: {
    addr: string;
  }) => Promise<LastClaimedResponse>;
}
export class FaucetQueryClient implements FaucetReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
    this.lastClaimed = this.lastClaimed.bind(this);
  }

  lastClaimed = async ({
    addr
  }: {
    addr: string;
  }): Promise<LastClaimedResponse> => {
    return this.client.queryContractSmart(this.contractAddress, {
      last_claimed: {
        addr
      }
    });
  };
}
export interface FaucetInterface extends FaucetReadOnlyInterface {
  contractAddress: string;
  sender: string;
  claim: (fee?: number | StdFee | "auto", memo?: string, _funds?: Coin[]) => Promise<ExecuteResult>;
}
export class FaucetClient extends FaucetQueryClient implements FaucetInterface {
  client: SigningCosmWasmClient;
  sender: string;
  contractAddress: string;

  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {
    super(client, contractAddress);
    this.client = client;
    this.sender = sender;
    this.contractAddress = contractAddress;
    this.claim = this.claim.bind(this);
  }

  claim = async (fee: number | StdFee | "auto" = "auto", memo?: string, _funds?: Coin[]): Promise<ExecuteResult> => {
    return await this.client.execute(this.sender, this.contractAddress, {
      claim: {}
    }, fee, memo, _funds);
  };
}