/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  base_token: string;
  converter_contract: string;
  owner: string;
  staking_contract: string;
  vxtoken: string;
  xtoken: string;
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  update_config: {
    config: UpdateConfig;
  };
} | {
  update_owner: {
    owner: string;
  };
} | {
  withdraw: {
    amount: Uint128;
    recipient: string;
  };
} | {
  withdraw_bribe_rewards: {};
} | {
  place_vote: {
    gauge: number;
    votes?: Vote[] | null;
  };
};
export type Uint128 = string;
export type Binary = string;
export type Decimal = string;
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface UpdateConfig {
  astroport_gauge_contract?: string | null;
  base_token?: string | null;
  converter_contract?: string | null;
  gauge_contract?: string | null;
  staking_contract?: string | null;
  vxtoken?: string | null;
  xtoken?: string | null;
}
export interface Vote {
  option: string;
  weight: Decimal;
}
export type QueryMsg = {
  config: {};
} | {
  owner: {};
} | {
  voting_power: {};
} | {
  convert_ratio: {};
};
export type Addr = string;
export interface Config {
  astroport_gauge_contract: Addr;
  base_token: Addr;
  converter_contract: Addr;
  gauge_contract: Addr;
  staking_contract: Addr;
  vxtoken: Addr;
  xtoken: Addr;
}
export type TupleOfUint128AndUint128 = [Uint128, Uint128];